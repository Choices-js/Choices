name: Browsers

on:
  pull_request:
    branches:
      - master

jobs:
  screenshots:
    name: Screenshots

    strategy:
      fail-fast: false
      matrix:
        os: [ubuntu-latest, windows-latest, macOS-latest]
        browser: [ie, MicrosoftEdge, safari, firefox]
        exclude:
          # On Windows, run tests with only IE and Edge
          - os: windows-latest
            browser: safari
          - os: windows-latest
            browser: firefox
          # On macOS, run tests with only the latest environments.
          - os: macOS-latest
            browser: ie
          - os: macOS-latest
            browser: MicrosoftEdge
          - os: macOS-latest
            browser: firefox
          # Linux - just firefox
          - os: ubuntu-latest
            browser: ie
          - os: ubuntu-latest
            browser: MicrosoftEdge
          - os: ubuntu-latest
            browser: safari

    runs-on: ${{ matrix.os }}
    steps:
      - uses: actions/checkout@v1
        with:
          fetch-depth: 1
      - uses: actions/setup-node@v1
        with:
          node-version: '12.x'
      - run: npm ci
        env:
          CYPRESS_INSTALL_BINARY: 0
          HUSKY_SKIP_INSTALL: true

      # install drivers
      - name: Enable Safari Driver
        run: |
          sudo defaults write com.apple.Safari IncludeDevelopMenu 1
          sudo safaridriver --enable
          sudo defaults write com.apple.Safari AllowRemoteAutomation 1
          safaridriver -p 0 &
        if: matrix.browser == 'safari'

      - run: npm i geckodriver
        if: matrix.browser == 'firefox'

      - run: npm i chromedriver
        if: matrix.browser == 'chrome'

      - run: npm i selenium-webdriver pixelmatch pngjs
      - run: node .github/actions-scripts/selenium.js
        env:
          SELENIUM_BROWSER: ${{ matrix.browser }}
      - uses: actions/upload-artifact@master
        if: failure()
        with:
          name: screenshot-${{ matrix.browser }}-${{ matrix.os }}
          path: '*.png'
