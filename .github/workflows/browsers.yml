name: Browsers

on:
  pull_request:
    branches:
      - master

jobs:
  screenshots:
    name: Screenshots

    strategy:
      fail-fast: false
      matrix:
        os: [ubuntu-latest, windows-latest, macOS-latest]
        browser: [ie, MicrosoftEdge, safari, firefox]
        exclude:
          # On Windows, run tests with only IE and Edge
          - os: windows-latest
            browser: safari
          - os: windows-latest
            browser: firefox
          # On macOS, run tests with only the latest environments.
          - os: macOS-latest
            browser: ie
          - os: macOS-latest
            browser: MicrosoftEdge
          - os: macOS-latest
            browser: firefox
          # Linux - just firefox
          - os: ubuntu-latest
            browser: ie
          - os: ubuntu-latest
            browser: MicrosoftEdge
          - os: ubuntu-latest
            browser: safari

    runs-on: ${{ matrix.os }}
    steps:
      - uses: actions/checkout@v1
        with:
          fetch-depth: 1
      - uses: actions/setup-node@v1
        with:
          node-version: '12.x'
      - run: npm ci
        env:
          CYPRESS_INSTALL_BINARY: 0
          HUSKY_SKIP_INSTALL: true

      # install drivers
      - name: Enable Safari Driver
        run: sudo safaridriver --enable
        if: matrix.browser == 'safari'

      # geskodriver - https://github.com/mozilla/geckodriver/releases/
      - name: Install Firefox driver on Ubuntu
        if: matrix.browser == 'firefox' && matrix.os == 'ubuntu-latest'
        run: |
          wget https://github.com/mozilla/geckodriver/releases/download/v0.26.0/geckodriver-v0.26.0-linux64.tar.gz
          sudo sh -c 'tar -x geckodriver -zf geckodriver-v0.26.0-linux64.tar.gz -O > /usr/bin/geckodriver'
          sudo chmod +x /usr/bin/geckodriver
          rm geckodriver-v0.26.0-linux64.tar.gz

      - run: npm i selenium-webdriver pixelmatch pngjs
      - run: node .github/actions-scripts/selenium.js
        env:
          SELENIUM_BROWSER: ${{ matrix.browser }}
      - uses: actions/upload-artifact@master
        if: failure()
        with:
          name: screenshot-${{ matrix.browser }}-${{ matrix.os }}
          path: '*.png'
