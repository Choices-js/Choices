name: Browsers

on:
  pull_request:
    branches:
      - master

jobs:
  screenshots:
    name: Screenshots

    strategy:
      fail-fast: false
      matrix:
        os: [windows-latest, macOS-10.14]
        browser: [ie, MicrosoftEdge, safari, firefox]
        exclude:
          # On Windows, run tests with only IE and Edge
          - os: windows-latest
            browser: safari
          # On macOS, run tests with only the latest environments.
          - os: macOS-10.14
            browser: ie
          - os: macOS-10.14
            browser: MicrosoftEdge
          - os: macOS-10.14
            browser: firefox
          # Linux - just firefox
          - os: ubuntu-latest
            browser: ie
          - os: ubuntu-latest
            browser: MicrosoftEdge

    runs-on: ${{ matrix.os }}
    steps:
      - name: Dump GitHub context
        env:
          GITHUB_CONTEXT: ${{ toJson(github) }}
        run: echo "$GITHUB_CONTEXT"

      - uses: actions/checkout@v1
        with:
          fetch-depth: 1
      - uses: actions/setup-node@v1
        with:
          node-version: '12.x'
      - uses: warrenbuckley/Setup-Nuget@v1
        if: matrix.os == 'windows-latest'
      - run: npm ci
        env:
          CYPRESS_INSTALL_BINARY: 0
          HUSKY_SKIP_INSTALL: true

      # install drivers
      - name: Enable Safari Driver
        run: |
          defaults write com.apple.Safari IncludeDevelopMenu 1
          defaults write com.apple.Safari AllowJavaScriptFromAppleEvents 1
          defaults write com.apple.Safari IncludeInternalDebugMenu 1
          sudo safaridriver --enable
          defaults write com.apple.Safari AllowRemoteAutomation 1
          safaridriver -p 0 &
        if: matrix.browser == 'safari'

      # https://github.com/mozilla/geckodriver/releases
      - run: npm i geckodriver
        if: matrix.browser == 'firefox'
        env:
          GECKODRIVER_VERSION: '0.26.0'

      - run: npm i chromedriver --chromedriver_version=LATEST
        if: matrix.browser == 'chrome'

      - run: |
          nuget install Selenium.WebDriver.IEDriver -Version 3.150.1
          echo "::add-path::./Selenium.WebDriver.IEDriver.3.150.1/driver/"
        if: matrix.browser == 'ie'

      - run: |
          nuget install Selenium.WebDriver.MicrosoftDriver -Version 17.17134.0
          echo "::add-path::./Selenium.WebDriver.MicrosoftDriver.17.17134.0/driver/"
        if: matrix.browser == 'MicrosoftEdge'

      - run: npm i selenium-webdriver pixelmatch pngjs
      - run: node .github/actions-scripts/selenium.js
        env:
          SELENIUM_BROWSER: ${{ matrix.browser }}
      - uses: actions/upload-artifact@master
        if: failure()
        with:
          name: screenshot-${{ matrix.browser }}-${{ matrix.os }}
          path: screenshot
